substitutions:
  _IMAGE_NAME: ${LOCATION}-docker.pkg.dev/${PROJECT_ID}/web-registry/${_CLOUD_RUN_SERVICE}:latest
steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    id: build
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build . -t ${_IMAGE_NAME} --build-arg DB_TOKEN=$$DB_TOKEN --build-arg ALPACA_KEY=$$ALPACA_KEY --build-arg ALPACA_SECRET=$$ALPACA_SECRET --build-arg BUCKET_PRIVATE_KEY=$$BUCKET_PRIVATE_KEY
    secretEnv: ['DB_TOKEN', 'ALPACA_KEY', 'ALPACA_SECRET', 'BUCKET_PRIVATE_KEY']
  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: deploy
    args:
      [
        'run',
        'deploy',
        '${_CLOUD_RUN_SERVICE}',
        '--image',
        '${_IMAGE_NAME}',
        '--region',
        '${_CLOUD_RUN_REGION}',
        '--allow-unauthenticated',
        '--platform',
        'managed',
      ]

# Push the container image to Artifact Registry if build was successful
images:
  - ${_IMAGE_NAME}

timeout: '300s' # timeout after 5 minutes
availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/db-token/versions/latest
      env: 'DB_TOKEN'
    - versionName: projects/${PROJECT_ID}/secrets/alpaca-key/versions/latest
      env: 'ALPACA_KEY'
    - versionName: projects/${PROJECT_ID}/secrets/alpaca-secret/versions/latest
      env: 'ALPACA_SECRET'
    - versionName: projects/${PROJECT_ID}/secrets/bucket-private-key/versions/latest
      env: 'BUCKET_PRIVATE_KEY'
